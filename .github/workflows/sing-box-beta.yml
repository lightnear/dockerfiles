name: sing-box-beta

on:
  repository_dispatch:
    types: [on-docker-build]
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   # UTC 01:00 -> CST (China) 09:00, see https://datetime360.com/cn/utc-cst-china-time/
  #   - cron: '0 1 * * 1' # every monday at 1am
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"

jobs:
  docker:
    name: docker
    runs-on: ubuntu-latest

    env:
      IMAGE: lightnear/sing-box

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Get latest version
        run: |
          LATEST_VERSION=""
          until [ -n "$LATEST_VERSION" ]; do
          LATEST_VERSION=$(curl -sX GET "https://api.github.com/repos/SagerNet/sing-box/releases" | \
          jq -r 'map(select(.prerelease)) | first | .tag_name')
          done
          LATEST_VERSION=$(echo $LATEST_VERSION | tr -d 'v')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE }}
            ghcr.io/${{ env.IMAGE }}
          tags: |
            type=raw,value=beta,enable=${{ env.LATEST_VERSION != null }}
            type=raw,value=${{ env.LATEST_VERSION }},enable=${{ env.LATEST_VERSION != null }}
          labels: |
            maintainer=lightnear

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./sing-box-beta
          platforms: |
            linux/amd64
            linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          # cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

  build:
    name: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # windows
          - name: windows-amd64
            goos: windows
            goarch: amd64
            goamd64: v1
          - name: windows-amd64-v3
            goos: windows
            goarch: amd64
            goamd64: v3
          - name: windows-386
            goos: windows
            goarch: 386
          - name: windows-arm64
            goos: windows
            goarch: arm64
          - name: windows-arm32v7
            goos: windows
            goarch: arm
            goarm: 7

          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
          - name: linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3
          # - name: linux-386
          #   goos: linux
          #   goarch: 386
          # - name: linux-arm64
          #   goos: linux
          #   goarch: arm64
          # - name: linux-armv5
          #   goos: linux
          #   goarch: arm
          #   goarm: 5
          # - name: linux-armv6
          #   goos: linux
          #   goarch: arm
          #   goarm: 6
          # - name: linux-armv7
          #   goos: linux
          #   goarch: arm
          #   goarm: 7
          # - name: linux-mips-softfloat
          #   goos: linux
          #   goarch: mips
          #   gomips: softfloat
          # - name: linux-mips-hardfloat
          #   goos: linux
          #   goarch: mips
          #   gomips: hardfloat
          # - name: linux-mipsel-softfloat
          #   goos: linux
          #   goarch: mipsle
          #   gomips: softfloat
          # - name: linux-mipsel-hardfloat
          #   goos: linux
          #   goarch: mipsle
          #   gomips: hardfloat
          # - name: linux-mips64
          #   goos: linux
          #   goarch: mips64
          # - name: linux-mips64el
          #   goos: linux
          #   goarch: mips64le
          # - name: linux-s390x
          #   goos: linux
          #   goarch: s390x
          # darwin
          - name: darwin-amd64
            goos: darwin
            goarch: amd64
            goamd64: v1
          - name: darwin-amd64-v3
            goos: darwin
            goarch: amd64
            goamd64: v3
          - name: darwin-arm64
            goos: darwin
            goarch: arm64
          # freebsd
          # - name: freebsd-amd64
          #   goos: freebsd
          #   goarch: amd64
          #   goamd64: v1
          # - name: freebsd-amd64-v3
          #   goos: freebsd
          #   goarch: amd64
          #   goamd64: v3
          # - name: freebsd-386
          #   goos: freebsd
          #   goarch: 386
          # - name: freebsd-arm64
          #   goos: freebsd
          #   goarch: arm64
      fail-fast: false

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 1
      TAGS: with_quic,with_grpc,with_dhcp,with_wireguard,with_shadowsocksr,with_ech,with_utls,with_reality_server,with_acme,with_clash_api,with_v2ray_api,with_gvisor

    steps:
      - name: Get latest version
        run: |
          LATEST_VERSION=""
          until [ -n "$LATEST_VERSION" ]; do
          LATEST_VERSION=$(curl -sX GET "https://api.github.com/repos/SagerNet/sing-box/releases" | \
          jq -r 'map(select(.prerelease)) | first | .tag_name')
          done
          echo "SINGBOX_TAG=$LATEST_VERSION" >> $GITHUB_ENV
          LATEST_VERSION=$(echo $LATEST_VERSION | tr -d 'v')
          echo "SINGBOX_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M) ($LATEST_VERSION)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: SagerNet/sing-box
          ref: ${{ env.SINGBOX_TAG }}
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
          check-latest: true
          cache: true
          cache-dependency-path: go.sum

      - name: Build
        id: build
        run: sed -i 's/CGO_ENABLED=0/CGO_ENABLED=1/g' Makefile && cat Makefile && make

      - name: Tar files
        run: tar -czvf sing-box-${{ matrix.name }}.tar.gz sing-box*

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sing-box-${{ matrix.name }}
          path: sing-box*.tar.gz

  release:
    needs: build
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Get latest version
        run: |
          LATEST_VERSION=""
          until [ -n "$LATEST_VERSION" ]; do
          LATEST_VERSION=$(curl -sX GET "https://api.github.com/repos/SagerNet/sing-box/releases" | \
          jq -r 'map(select(.prerelease)) | first | .tag_name')
          done
          echo "SINGBOX_TAG=$LATEST_VERSION" >> $GITHUB_ENV
          SINGBOX_VERSION=$(echo $LATEST_VERSION | tr -d 'v')
          echo "SINGBOX_VERSION=$SINGBOX_VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=sing-box $SINGBOX_VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=sing-box-$SINGBOX_VERSION" >> $GITHUB_ENV

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-linux-amd64

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-linux-amd64-v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-windows-amd64

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-windows-amd64-v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-darwin-amd64

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sing-box-darwin-amd64-v3

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.RELEASE_NAME }}
          prerelease: true
          files: |
            sing-box*.tar.gz

